---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" />
    
    <!-- Load Chart.js and related scripts with defer -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/hammerjs@2.0.8/hammer.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@2.0.1/dist/chartjs-plugin-zoom.umd.min.js" defer></script>
    
    <style is:global>
      html {
        scroll-behavior: smooth;
      }
      .airfoil-tab.active {
        color: #2563eb;
        border-color: #2563eb;
      }
      .airfoil-tab-content {
        display: none;
      }
      .airfoil-tab-content.active {
        display: block;
      }
    </style>
  </head>
  <body>
    <script>
      window.storage = {
        get(key) {
          return JSON.parse(localStorage.getItem(key) || '[]');
        },
        set(key, value) {
          localStorage.setItem(key, JSON.stringify(value));
        },
        isFavorite(id) {
          return this.get('favorites').some(fav => fav.id === id);
        },
        toggleFavorite(airfoil) {
          let favorites = this.get('favorites');
          const index = favorites.findIndex(fav => fav.id === airfoil.id);
          let isFav;
          if (index === -1) {
            favorites.push(airfoil);
            isFav = true;
          } else {
            favorites.splice(index, 1);
            isFav = false;
          }
          this.set('favorites', favorites);
          return isFav;
        },
        addToRecentlyViewed(airfoil) {
          let recent = this.get('recentlyViewed');
          // Remove if already exists
          recent = recent.filter(item => item.id !== airfoil.id);
          // Add to front
          recent.unshift(airfoil);
          // Limit to 10 items
          if (recent.length > 10) recent = recent.slice(0, 10);
          this.set('recentlyViewed', recent);
        }
      };
    </script>
    <header class="bg-white border-b border-gray-200 fixed top-0 left-0 right-0 z-50">
      <div class="container mx-auto px-4 py-3 flex justify-between items-center">
        <a href="/" class="text-xl font-bold text-blue-600">AeroFoilPro</a>
        <div class="flex items-center space-x-2">
          <button class="bg-blue-600 text-white px-3 py-1.5 rounded text-sm hover:bg-blue-700">Sign In</button>
        </div>
      </div>
    </header>

    <div class="flex w-full bg-gray-50 min-h-screen pt-[64px] pb-[88px]">
      <!-- Sidebar (fixed, non-scrollable) -->
      <aside class="hidden md:flex fixed left-0 top-[64px] z-30 h-[calc(100vh-64px)] w-64">
        <div id="sidebar-outer" class="h-full w-full bg-white border-r border-gray-200" style="overflow: hidden;">
          <slot name="sidebar" />
        </div>
      </aside>

      <!-- Main Content Area -->
      <div class="flex-1 pl-4 md:ml-64 xl:mr-[332px] w-full min-w-0 max-w-full">
        <slot />
      </div>

      <!-- Right Banner Ad -->
      <aside class="hidden xl:flex fixed right-0 top-[64px] z-40 h-[calc(100vh-64px)] w-[332px] items-center justify-center px-4">
        <div class="w-[300px] h-[600px] bg-gray-200 rounded-lg flex items-center justify-center text-gray-500 text-lg font-semibold">
          Ad
        </div>
      </aside>
    </div>

    <footer id="main-footer" class="bg-white border-t border-gray-200 fixed bottom-0 left-0 right-0 z-50">
      <div class="container mx-auto px-4 py-6">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <p class="text-gray-600 text-sm">&copy; 2024 AeroFoilPro. All rights reserved.</p>
          <div class="flex space-x-4 mt-4 md:mt-0">
            <a href="#" class="text-gray-600 hover:text-blue-600 text-sm">Privacy Policy</a>
            <a href="#" class="text-gray-600 hover:text-blue-600 text-sm">Terms of Service</a>
            <a href="#" class="text-gray-600 hover:text-blue-600 text-sm">Contact</a>
          </div>
        </div>
      </div>
    </footer>

    <slot name="after-footer" />
    <script src="/scripts/favorite.js" type="module"></script>
    <script src="/scripts/sidebar.js" defer></script>
    <script>
      function scaleSidebarContent() {
        const outer = document.getElementById('sidebar-outer');
        const footer = document.getElementById('main-footer');
        if (!outer) return;
        const content = outer.firstElementChild;
        if (!content) return;
        // Reset scale
        content.style.transform = '';
        content.style.transformOrigin = 'top left';
        // Calculate available and actual height
        let available = outer.clientHeight;
        if (footer) {
          // Get the height of the footer (including padding)
          const footerHeight = footer.offsetHeight;
          // Check if the sidebar and footer overlap in the viewport
          const sidebarRect = outer.getBoundingClientRect();
          const footerRect = footer.getBoundingClientRect();
          // If the footer is visible and overlaps the sidebar, subtract its height
          if (footerRect.top < window.innerHeight && sidebarRect.bottom > footerRect.top) {
            available -= (sidebarRect.bottom - footerRect.top);
          }
        }
        const actual = content.scrollHeight;
        if (actual > available) {
          const scale = available / actual;
          content.style.transform = `scale(${scale})`;
        }
      }
      window.addEventListener('DOMContentLoaded', scaleSidebarContent);
      window.addEventListener('resize', scaleSidebarContent);
    </script>
  </body>
</html> 